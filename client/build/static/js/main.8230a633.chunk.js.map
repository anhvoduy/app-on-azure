{"version":3,"sources":["components/base/header/index.js","components/base/header/container.js","components/base/footer/index.js","components/base/footer/container.js","images/tbs1.jpg","services/api.js","services/videoService.js","components/employee/header/index.js","components/employee/header/container.js","components/employee/content/row.js","components/employee/content/index.js","components/employee/content/container.js","components/base/loading/index.js","components/base/loading/container.js","components/employee/list/index.js","components/employee/list/container.js","services/empService.js","components/employee/container.js","components/employee/index.js","components/employeeEdit/form/index.js","components/employeeEdit/form/container.js","components/employeeEdit/index.js","components/employeeEdit/container.js","components/course/header/index.js","components/course/header/container.js","components/course/content/row.js","components/course/content/index.js","components/course/content/container.js","components/course/list/index.js","components/course/list/container.js","services/courseService.js","components/course/container.js","components/course/index.js","components/courseEdit/form/index.js","components/courseEdit/form/container.js","components/courseEdit/index.js","components/courseEdit/container.js","components/video/header/index.js","components/video/header/container.js","components/video/content/row.js","components/video/content/index.js","components/video/content/container.js","components/video/list/index.js","components/video/list/container.js","components/video/container.js","components/video/index.js","components/videoEdit/form/index.js","components/videoEdit/form/container.js","components/videoEdit/index.js","components/videoEdit/container.js","components/base/media/index.js","components/base/media/container.js","components/player/display/index.js","components/player/display/container.js","components/player/index.js","components/player/container.js","components/camera/container.js","components/camera/index.js","routes.js","serviceWorkerRegistration.js","reportWebVitals.js","common/index.js","reducers/videoReducer.js","reducers/index.js","store/index.js","index.js","store/configure.js"],"names":["Container","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","info","version","api","axios","create","baseURL","videoService","status","Promise","resolve","reject","get","then","res","data","catch","err","getList","pageSize","pageIndex","url","getVideoByKey","key","video","getCategoryList","Array","isArray","length","_","forEach","item","value","VideoCategoryId","label","VideoCategoryName","Row","index","rowItem","EmployeeCode","EmployeeName","to","EmployeeKey","employees","map","isLoading","loading","handlePageClick","pageTotal","pageSizeList","onChangePageSize","Col","style","maxWidth","options","multi","values","onChange","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","Table","striped","bordered","hover","size","empService","getEmployees","getEmployeeByKey","getTeams","TeamId","TeamName","updateEmployee","emp_key","emp_name","reqInfo","post","assignEmployee","teamIds","PAGE_SIZE_LIST","useState","setLoading","setEmployees","setPageSize","setPageTotal","queryData","useCallback","pSize","pIndex","a","resEmpInfo","page_total","page_data","useEffect","selectedPage","selected","selectedItem","employee","teams","selectTeams","saveEmployee","onSelectChangeTeam","onChangeEmployeeName","Form","Group","controlId","Label","Control","placeholder","readOnly","Button","variant","onClick","useParams","setTeams","setSelectTeams","setEmployee","t1","empInfo","TeamIds","JSON","parse","ids","indexOf","push","e","preventDefault","res1","res2","alert","target","CourseName","Description","CourseKey","courseService","getCourses","getCourseByKey","updateCourse","course_key","course_name","course_desc","course","saveCourse","onChangeCourseName","onChangeCourseDesc","setCourse","courseInfo","VideoName","VideoKey","videos","setVideos","resVideo","VideoName_EN","Description_EN","video_key","setVideo","videoInfo","playing","muted","title","text","files","VideoFileUrl","vid","Files","Content","alignItems","marginLeft","RouteConfig","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INCREMENT","DECREMENT","START_LOADING","STOP_LOADING","GET_VIDEO_PENDING","GET_VIDEO_COMPLETED","GET_VIDEO_FAILED","INITIAL_STATE","count","videoList","videoDetail","videoReducer","payload","message","rootReducer","combineReducers","routing","routerReducer","form","formReducer","configureStore","store","initialState","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.8230a633.chunk.js","sourcesContent":["import Container from './container';\nexport default Container;","import React from 'react';\n\nconst Container = () => {\n  return (\n    <nav className='navbar navbar-expand-lg navbar-dark bg-dark fixed-top'>\n      <div className='container'>\n        <a className='navbar-brand' href='/'>VNI Online 365</a>\n        <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarResponsive' aria-controls='navbarResponsive' aria-expanded='false' aria-label='Toggle navigation'>\n          <span className='navbar-toggler-icon'></span>\n        </button>\n        <div className='collapse navbar-collapse' id='navbarResponsive'>\n          <ul className='navbar-nav ml-auto'>\n            <li className='nav-item'>\n              <a className='nav-link' href='/'>Home\n                <span className='sr-only'>(current)</span>\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a className='nav-link' href='/employee'>Employee</a>\n            </li>\n            <li className='nav-item'>\n              <a className='nav-link' href='/course'>Course</a>\n            </li>\n            <li className='nav-item'>\n              <a className='nav-link' href='/video'>Video</a>\n            </li>\n            <li className='nav-item'>\n              <a className='nav-link' href='/camera'>Camera</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nconst Container2 = () => {\n  return (\n    <nav className='navbar navbar-expand-lg navbar-dark bg-dark fixed-top'>\n      <div className='container'>\n        <a className='navbar-brand' href='/'>VNI Online 365</a>\n        <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarResponsive' aria-controls='navbarResponsive' aria-expanded='false' aria-label='Toggle navigation'>\n          <span className='navbar-toggler-icon'></span>\n        </button>\n        <div className='collapse navbar-collapse' id='navbarResponsive'>\n          <ul className='navbar-nav ml-auto'>\n            <li className='nav-item'>\n              <a className='nav-link' href='/'>Home\n                <span className='sr-only'>(current)</span>\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a className='nav-link' href='/camera'>Camera</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Container2;","import Container from './container';\nexport default Container;","import React from 'react';\nimport info from '../../../../package.json';\n\nconst Footer = function() {  \n  return (\n    <footer className=\"py-3 bg-dark\">\n      <div className=\"container\">\n        <p className=\"m-0 text-center text-white\">\n          Copyright &copy; 2021 | version {info.version}\n        </p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/tbs1.efbd6cce.jpg\";","import axios from 'axios';\n\nvar API_URL = '';\n\nif(process.env.NODE_ENV==='development') {\n    API_URL = 'http://localhost:3000';\n};\n\nconst api = axios.create({\n    baseURL: API_URL\n});\n\nexport default api;","import api from './api';\nimport _ from 'lodash';\n\nconst videoService = function() {\n}\n\nvideoService.status = function() {\n  let url = '/v1/api/connection';\n  return new Promise(function(resolve, reject) {\n    api.get(url).then(function(res) {\n      let { data } = res;\n      resolve(data);\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\nvideoService.getList = function(pageSize, pageIndex) {\n  let url = `/v1/api/video/list?pagesize=${pageSize}&pageindex=${pageIndex}`;\n  return new Promise(function(resolve, reject) {\n    api.get(url).then(function(res) {\n      let { data } = res.data;\n      resolve(data);\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\nvideoService.getVideoByKey = function(key) {\n  let url = `/v1/api/video/item?video_key=${key}`;\n  return new Promise(function(resolve, reject) {\n    api.get(url).then(function(res) {\n      let { data: video } = res.data;      \n      if(video) resolve(video);\n      else resolve({});\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\nvideoService.getCategoryList = function() {\n  let url = '/v1/api/video/category';\n  return new Promise(function(resolve, reject) {\n    api.get(url).then(function(res) {\n      let { data } = res.data;\n      if(Array.isArray(data) && data.length) {\n        _.forEach(data, item => {\n          item.value = item.VideoCategoryId;\n          item.label = item.VideoCategoryName;\n        });\n      }\n      resolve(data);\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\nexport default videoService;","import Container from './container';\nexport default Container;","import React from 'react';\n\nconst Header = function() {  \n  return (\n    <thead>\n      <tr>\n        <th>No.</th>\n        <th>Code</th>\n        <th>Name</th>\n        <th>Edit</th>\n      </tr>\n    </thead>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Row = function({ index, rowItem }) {  \n  return (\n    <tr>\n      <td>{index + 1}</td>\n      <td>{rowItem.EmployeeCode}</td>\n      <td>{rowItem.EmployeeName}</td>\n      <td className='row-btn'>\n        <Link to={`/employee/${rowItem.EmployeeKey}`}>Edit</Link>\n      </td>\n    </tr>\n  );\n}\n\n\nRow.propTypes = {\n  index: PropTypes.number,\n  rowItem: PropTypes.object\n}\n\nexport default Row;","import Container from './container';\nexport default Container;","import React from 'react';\nimport RowItem from './row';\n\nconst Content = function({ employees }) {  \n  return (\n    <tbody>\n      {\n        (Array.isArray(employees) && employees.length) \n        ? employees.map((item, index) => <RowItem key={'key' + index} index={index} rowItem={item} />)\n        : null\n      }      \n    </tbody>\n  );\n}\n\nexport default Content;","import Container from './container';\nexport default Container;","import * as React from 'react';\n\nconst Loading = ({ isLoading }) => {\n  return <React.Fragment>{isLoading && <div>Loading ...</div>}</React.Fragment>\n}\n\nexport default Loading;","import Container from './container';\nexport default Container;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col, Table } from 'react-bootstrap';\nimport TableHeader from '../header';\nimport TableContent from '../content';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-dropdown-select';\nimport Loading from '../../base/loading';\n\nconst List = function({ loading, employees, handlePageClick, pageTotal, pageSize, pageSizeList, onChangePageSize }) {  \n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h3>Employees</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select style={{maxWidth: 300 + 'px'}} options={pageSizeList} multi={false} values={pageSize} onChange={onChangePageSize} />\n        </Col>\n        <Col>\n          <ReactPaginate\n            previousLabel={'prev'}\n            nextLabel={'next'}\n            breakLabel={'...'}\n            breakClassName={'break-me'}\n            pageCount={pageTotal}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={handlePageClick}\n            containerClassName={'pagination'}\n            subContainerClassName={'pages pagination'}\n            activeClassName={'active'} />\n        </Col>\n      </Row>\n      {\n        loading ? \n          <Row className='row-loading'>\n            <Loading isLoading={loading} />\n          </Row> \n        : <Row>\n            <Table striped bordered hover size=\"sm\">\n              <TableHeader />\n                <TableContent employees={employees}/>\n            </Table>\n          </Row>\n      }\n    </Container>\n  );\n}\n\nList.propTypes = {\n  loading: PropTypes.bool,\n  employee: PropTypes.object,\n  handlePageClick: PropTypes.func,\n  pageTotal: PropTypes.number,\n  pageSize: PropTypes.array,\n  pageSizeList: PropTypes.array,\n  onChangePageSize: PropTypes.func\n};\n\nexport default List;","import api from './api';\nimport { forEach } from 'lodash';\n\nconst empService = function() {\n}\n\nempService.status = function() {\n  let url = '/v1/api/connection';\n  return new Promise(function(resolve, reject) {\n    api.get(url).then(function(res) {\n      let { data } = res;\n      resolve(data);\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\nempService.getEmployees = function(pageSize, pageIndex) {\n  let url = `/v1/api/employee/list?pagesize=${pageSize}&pageindex=${pageIndex}`;\n  return new Promise(function(resolve, reject) {\n    api.get(url).then(function(res) {\n      let { data } = res.data;\n      resolve(data);\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\nempService.getEmployeeByKey = function(key) {\n  let url = `/v1/api/employee/item?emp_key=${key}`;\n  return new Promise(function(resolve, reject) {\n    api.get(url).then(function(res) {\n      let { data } = res.data;\n      if(Array.isArray(data) && data.length) resolve(data[0]);\n      else resolve({});\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\nempService.getTeams = function() {\n  let url = '/v1/api/employee/teams';\n  return new Promise(function(resolve, reject) {\n    api.get(url).then(function(res) {\n      let { data } = res.data;\n      if(Array.isArray(data) && data.length) {\n        forEach(data, item => {\n          item.value = item.TeamId;\n          item.label = item.TeamName;\n        });\n      }\n      resolve(data);\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\nempService.updateEmployee = function(emp_key, emp_name) {\n  let url = '/v1/api/employee/item';\n  let reqInfo = { emp_key, emp_name };\n  return new Promise(function(resolve, reject) {\n    api.post(url, reqInfo).then(function(res) {\n      let { data } = res.data;\n      resolve(data);\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\nempService.assignEmployee = function(emp_key, teamIds) {\n  let url = '/v1/api/employee/assign';\n  let reqInfo = { emp_key, teamIds };\n  return new Promise(function(resolve, reject) {\n    api.post(url, reqInfo).then(function(res) {\n      let { data } = res.data;\n      resolve(data);\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\nexport default empService;","import React, { useState, useEffect, useCallback } from 'react';\nimport Header from '../base/header';\nimport List from './list';\nimport Footer from '../base/footer';\nimport empService from '../../services/empService';\n\nconst PAGE_SIZE_LIST = [\n  {\n    label: '500',\n    value: '500',\n  },\n  {\n    label: '1000',\n    value: '1000'\n  },\n  {\n    label: '1500',\n    value: '1500'\n  }\n];\n\nconst Container = function() {\n  const [loading, setLoading] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const [pageSize, setPageSize] = useState([PAGE_SIZE_LIST[0]]);\n  const [pageTotal, setPageTotal] = useState(10);\n\n  const queryData = useCallback(async function (pSize, pIndex) {\n    try\n    {\n      setLoading(true);\n\n      let resEmpInfo = await empService.getEmployees(pSize, pIndex);\n      let { page_total, page_data } = resEmpInfo;\n      setPageTotal(page_total);\n      setEmployees(page_data);\n\n      setLoading(false);\n    }\n    catch (err) {\n      setLoading(false);\n      throw err;\n    }\n  }, []);\n  \n  useEffect(() => {\n    queryData(500, 0);\n  },[queryData]);\n\n  const handlePageClick = async function(selectedPage) {\n    try \n    {\n      let pSize = pageSize[0].value;\n      let pIndex = selectedPage.selected;\n      return queryData(pSize, pIndex);\n    }\n    catch (err) {\n      throw err;\n    }\n  }\n\n  const onChangePageSize = (selectedItem) => {\n    try\n    {\n      let pSize = selectedItem[0].value;\n      setPageSize(selectedItem);\n\n      let pIndex = 0;\n      return queryData(pSize, pIndex);\n    }\n    catch (err) {\n      throw err;\n    }\n  }\n\n  return (\n    <div className='wrap employee-page'>\n      <Header />      \n      \n      <List loading={loading}\n            employees={employees} \n            handlePageClick={handlePageClick} \n            pageTotal={pageTotal}\n            pageSize={pageSize}\n            pageSizeList={PAGE_SIZE_LIST}\n            onChangePageSize={onChangePageSize} />\n      \n      <Footer />\n    </div>\n  );\n}\n\nexport default Container;","import Container from './container';\nexport default Container;","import Container from './container';\nexport default Container;","import React from 'react';\nimport PropTypes from 'prop-types'; \nimport { Container, Form, Button } from 'react-bootstrap';\nimport Select from 'react-dropdown-select';\n\nconst FormEdit = function({ employee, teams, selectTeams, saveEmployee, onSelectChangeTeam, onChangeEmployeeName }) {    \n    return (\n        <Container className='form-full-screen'>\n            <Form>\n                <Form.Group controlId=\"formEmpCode\">\n                    <Form.Label>Employee Code:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter employee code\" value={employee.EmployeeCode} readOnly={true}/>\n                </Form.Group>\n                <Form.Group controlId=\"formEmpName\">\n                    <Form.Label>Employee Name:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter account name\" value={employee.EmployeeName} onChange={onChangeEmployeeName} />\n                </Form.Group>\n                <Form.Group controlId=\"formSelectTeam\">\n                    <Form.Label>Teams:</Form.Label>\n                    <Select options={teams} onChange={onSelectChangeTeam} multi={true} values={selectTeams} />\n                </Form.Group>\n                \n                <Button variant=\"primary\" type=\"submit\" onClick={saveEmployee}>\n                    Submit\n                </Button>\n            </Form>\n        </Container>\n    );\n}\n\nFormEdit.propTypes = {\n    employee: PropTypes.object,\n    teams: PropTypes.array,\n    selectTeams: PropTypes.array,\n    saveEmployee: PropTypes.func,\n    onSelectChangeTeam: PropTypes.func,    \n    onChangeEmployeeName: PropTypes.func\n};\n\nexport default FormEdit;","import Container from './container';\nexport default Container;","import React, { useState, useCallback, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from '../base/header';\nimport Footer from '../base/footer';\nimport FormEdit from './form';\nimport empService from '../../services/empService';\nimport { forEach } from 'lodash';\n\nconst EditContainer = function() {\n  const { id: emp_key } = useParams();\n  const [teams, setTeams] = useState([]);\n  const [selectTeams, setSelectTeams] = useState([]);\n  const [employee, setEmployee] = useState(null);\n\n  const queryData = useCallback(async function () {\n    try\n    {\n      let t1 = await empService.getTeams();\n      setTeams(t1);\n\n      let empInfo = await empService.getEmployeeByKey(emp_key);\n      setEmployee(empInfo);      \n      \n      if(empInfo.TeamIds) {        \n        let teamIds = JSON.parse(empInfo.TeamIds);\n        let ids = [];\n        forEach(t1, (item) => {\n          if(Array.isArray(teamIds) && teamIds.length && teamIds.indexOf(item.TeamId) >= 0) {\n            ids.push(item);\n          }\n        });        \n        setSelectTeams(ids);\n      }\n    }\n    catch (err) {\n      throw err;\n    }\n  }, [emp_key]);\n    \n  useEffect(() => {\n    queryData();\n  },[queryData]);\n\n  const saveEmployee = async (e) => {\n    e.preventDefault();\n    try \n    {\n      let teamIds = [];\n      forEach(selectTeams, item => {\n        teamIds.push(item.TeamId);\n      });\n\n      let res1 = await empService.updateEmployee(employee.EmployeeKey, employee.EmployeeName);\n\n      let res2 = await empService.assignEmployee(employee.EmployeeKey, teamIds);\n      \n      if(res1 && res2) alert('Submit is success!');\n    }\n    catch (err) {\n      throw err;\n    }\n  }\n\n  const onSelectChangeTeam = (data) => {    \n    setSelectTeams(data);    \n  }\n\n  const onChangeEmployeeName = (e) => {\n    if(employee) employee.EmployeeName = e.target.value;\n    setEmployee({...employee});\n  }\n\n  return (\n    <div className='wrap employee-page'>\n      <Header />\n      {\n        (employee && teams.length) ?\n        <FormEdit employee={employee}\n                  teams={teams}\n                  selectTeams={selectTeams}\n                  saveEmployee={saveEmployee}\n                  onSelectChangeTeam={onSelectChangeTeam}\n                  onChangeEmployeeName={onChangeEmployeeName} />\n        : null\n      }\n      <Footer />\n    </div>\n  );\n}\n\nexport default EditContainer;","import Container from './container';\nexport default Container;","import React from 'react';\n\nconst Header = function() {  \n  return (\n    <thead>\n      <tr>\n        <th>No.</th>\n        <th>Name</th>\n        <th>Desc</th>\n        <th>Edit</th>\n      </tr>\n    </thead>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Row = function({ index, rowItem }) {  \n  return (\n    <tr>\n      <td>{index + 1}</td>\n      <td>{rowItem.CourseName}</td>\n      <td>{rowItem.Description}</td>\n      <td className='row-btn'>\n        <Link to={`/course/${rowItem.CourseKey}`}>Edit</Link>\n      </td>\n    </tr>\n  );\n}\n\n\nRow.propTypes = {\n  index: PropTypes.number,\n  rowItem: PropTypes.object\n}\n\nexport default Row;","import Container from './container';\nexport default Container;","import React from 'react';\nimport RowItem from './row';\n\nconst Content = function({ employees }) {  \n  return (\n    <tbody>\n      {\n        (Array.isArray(employees) && employees.length) \n        ? employees.map((item, index) => <RowItem key={'key' + index} index={index} rowItem={item} />)\n        : null\n      }      \n    </tbody>\n  );\n}\n\nexport default Content;","import Container from './container';\nexport default Container;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col, Table } from 'react-bootstrap';\nimport TableHeader from '../header';\nimport TableContent from '../content';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-dropdown-select';\nimport Loading from '../../base/loading';\n\nconst List = function({ loading, employees, handlePageClick, pageTotal, pageSize, pageSizeList, onChangePageSize }) {  \n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h3>Courses</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select style={{maxWidth: 300 + 'px'}} options={pageSizeList} multi={false} values={pageSize} onChange={onChangePageSize} />\n        </Col>\n        <Col>\n          <ReactPaginate\n            previousLabel={'prev'}\n            nextLabel={'next'}\n            breakLabel={'...'}\n            breakClassName={'break-me'}\n            pageCount={pageTotal}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={handlePageClick}\n            containerClassName={'pagination'}\n            subContainerClassName={'pages pagination'}\n            activeClassName={'active'} />\n        </Col>\n      </Row>\n      {\n        loading ? \n          <Row className='row-loading'>\n            <Loading isLoading={loading} />\n          </Row> \n        : <Row>\n            <Table striped bordered hover size=\"sm\">\n              <TableHeader />\n                <TableContent employees={employees}/>\n            </Table>\n          </Row>\n      }\n    </Container>\n  );\n}\n\nList.propTypes = {\n  loading: PropTypes.bool,\n  employee: PropTypes.object,\n  handlePageClick: PropTypes.func,\n  pageTotal: PropTypes.number,\n  pageSize: PropTypes.array,\n  pageSizeList: PropTypes.array,\n  onChangePageSize: PropTypes.func\n};\n\nexport default List;","import api from './api';\n\nconst courseService = function() {\n}\n\ncourseService.status = function() {\n  let url = '/v1/api/connection';\n  return new Promise(function(resolve, reject) {\n    api.get(url).then(function(res) {\n      let { data } = res;\n      resolve(data);\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\ncourseService.getCourses = function(pageSize, pageIndex) {\n  let url = `/v1/api/course/list?pagesize=${pageSize}&pageindex=${pageIndex}`;\n  return new Promise(function(resolve, reject) {\n    api.get(url).then(function(res) {\n      let { data } = res.data;\n      resolve(data);\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\ncourseService.getCourseByKey = function(key) {\n  let url = `/v1/api/course/item?course_key=${key}`;\n  return new Promise(function(resolve, reject) {\n    api.get(url).then(function(res) {\n      let { data } = res.data;\n      if(Array.isArray(data) && data.length) resolve(data[0]);\n      else resolve({});\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\ncourseService.updateCourse = function(course_key, course_name, course_desc) {\n  let url = '/v1/api/course/item';\n  let reqInfo = { course_key, course_name, course_desc };\n  return new Promise(function(resolve, reject) {\n    api.post(url, reqInfo).then(function(res) {\n      let { data } = res.data;\n      resolve(data);\n    }).catch(function(err) {\n      reject(err);\n    });\n  });\n}\n\nexport default courseService;","import React, { useState, useEffect, useCallback } from 'react';\nimport Header from '../base/header';\nimport List from './list';\nimport Footer from '../base/footer';\nimport courseService from '../../services/courseService';\n\nconst PAGE_SIZE_LIST = [\n  {\n    label: '500',\n    value: '500',\n  },\n  {\n    label: '1000',\n    value: '1000'\n  },\n  {\n    label: '1500',\n    value: '1500'\n  }\n];\n\nconst Container = function() {\n  const [loading, setLoading] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const [pageSize, setPageSize] = useState([PAGE_SIZE_LIST[0]]);\n  const [pageTotal, setPageTotal] = useState(10);\n\n  const queryData = useCallback(async function (pSize, pIndex) {\n    try\n    {\n      setLoading(true);\n\n      let resEmpInfo = await courseService.getCourses(pSize, pIndex);\n      let { page_total, page_data } = resEmpInfo;\n      setPageTotal(page_total);\n      setEmployees(page_data);\n\n      setLoading(false);\n    }\n    catch (err) {\n      setLoading(false);\n      throw err;\n    }\n  }, []);\n  \n  useEffect(() => {\n    queryData(500, 0);\n  },[queryData]);\n\n  const handlePageClick = async function(selectedPage) {\n    try \n    {\n      let pSize = pageSize[0].value;\n      let pIndex = selectedPage.selected;\n      return queryData(pSize, pIndex);\n    }\n    catch (err) {\n      throw err;\n    }\n  }\n\n  const onChangePageSize = (selectedItem) => {\n    try\n    {\n      let pSize = selectedItem[0].value;\n      setPageSize(selectedItem);\n\n      let pIndex = 0;\n      return queryData(pSize, pIndex);\n    }\n    catch (err) {\n      throw err;\n    }\n  }\n\n  return (\n    <div className='wrap employee-page'>\n      <Header />      \n      \n      <List loading={loading}\n            employees={employees} \n            handlePageClick={handlePageClick} \n            pageTotal={pageTotal}\n            pageSize={pageSize}\n            pageSizeList={PAGE_SIZE_LIST}\n            onChangePageSize={onChangePageSize} />\n      \n      <Footer />\n    </div>\n  );\n}\n\nexport default Container;","import Container from './container';\nexport default Container;","import Container from './container';\nexport default Container;","import React from 'react';\nimport PropTypes from 'prop-types'; \nimport { Container, Form, Button } from 'react-bootstrap';\n\nconst FormEdit = function({ course, saveCourse, onChangeCourseName, onChangeCourseDesc }) {    \n    return (\n        <Container className='form-full-screen'>\n            <Form>\n                <Form.Group controlId=\"formCourseName\">\n                    <Form.Label>Course Name:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter course name\" value={course.CourseName} onChange={onChangeCourseName} />\n                </Form.Group>\n                <Form.Group controlId=\"formCourseDesc\">\n                    <Form.Label>Description:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter course desc\" value={course.Description} onChange={onChangeCourseDesc} />\n                </Form.Group>                \n                \n                <Button variant=\"primary\" type=\"submit\" onClick={saveCourse}>\n                    Submit\n                </Button>\n            </Form>\n        </Container>\n    );\n}\n\nFormEdit.propTypes = {\n    course: PropTypes.object,\n    saveCourse: PropTypes.func,\n    onChangeCourseName: PropTypes.func,    \n    onChangeCourseDesc: PropTypes.func\n};\n\nexport default FormEdit;","import Container from './container';\nexport default Container;","import React, { useState, useCallback, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from '../base/header';\nimport Footer from '../base/footer';\nimport FormEdit from './form';\nimport courseService from '../../services/courseService';\n\nconst EditContainer = function() {\n  const { id: course_key } = useParams();\n  const [course, setCourse] = useState(null);\n\n  const queryData = useCallback(async function () {\n    try\n    {\n      let courseInfo = await courseService.getCourseByKey(course_key);\n      setCourse(courseInfo);\n    }\n    catch (err) {\n      throw err;\n    }\n  }, [course_key]);\n    \n  useEffect(() => {\n    queryData();\n  },[queryData]);\n\n  const saveCourse = async (e) => {\n    e.preventDefault();\n    try \n    {\n      let res1 = await courseService.updateCourse(course.CourseKey, course.CourseName, course.Description);\n      if(res1) alert('Submit is success!');\n    }\n    catch (err) {\n      throw err;\n    }\n  }\n\n  const onChangeCourseName = (e) => {\n    if(course) course.CourseName = e.target.value;\n    setCourse({...course});\n  }\n\n  const onChangeCourseDesc = (e) => {\n    if(course) course.Description = e.target.value;\n    setCourse({...course});\n  }\n\n  return (\n    <div className='wrap course-page'>\n      <Header />\n      {\n        (course) ?\n        <FormEdit course={course}\n                  saveCourse={saveCourse}\n                  onChangeCourseName={onChangeCourseName}\n                  onChangeCourseDesc={onChangeCourseDesc} />\n        : null\n      }\n      <Footer />\n    </div>\n  );\n}\n\nexport default EditContainer;","import Container from './container';\nexport default Container;","import React from 'react';\n\nconst Header = function() {  \n  return (\n    <thead>\n      <tr>\n        <th>No.</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Edit</th>\n        <th>Play</th>\n      </tr>\n    </thead>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Row = function({ index, rowItem }) {  \n  return (\n    <tr>\n      <td>{index + 1}</td>\n      <td>{rowItem.VideoName}</td>\n      <td>{rowItem.Description}</td>\n      <td className='row-btn'>\n        <Link to={`/video/${rowItem.VideoKey}`}>Edit</Link>\n      </td>\n      <td className='row-btn'>\n        <Link to={`/player/${rowItem.VideoKey}`}>Play</Link>\n      </td>\n    </tr>\n  );\n}\n\n\nRow.propTypes = {\n  index: PropTypes.number,\n  rowItem: PropTypes.object\n}\n\nexport default Row;","import Container from './container';\nexport default Container;","import React from 'react';\nimport RowItem from './row';\n\nconst Content = function({ videos }) {  \n  return (\n    <tbody>\n      {\n        (Array.isArray(videos) && videos.length) \n        ? videos.map((item, index) => <RowItem key={'key' + index} index={index} rowItem={item} />)\n        : null\n      }      \n    </tbody>\n  );\n}\n\nexport default Content;","import Container from './container';\nexport default Container;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col, Table } from 'react-bootstrap';\nimport TableHeader from '../header';\nimport TableContent from '../content';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-dropdown-select';\nimport Loading from '../../base/loading';\n\nconst List = function({ loading, videos, handlePageClick, pageTotal, pageSize, pageSizeList, onChangePageSize }) {  \n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h3>Videos</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select style={{maxWidth: 300 + 'px'}} options={pageSizeList} multi={false} values={pageSize} onChange={onChangePageSize} />\n        </Col>\n        <Col>\n          <ReactPaginate\n            previousLabel={'prev'}\n            nextLabel={'next'}\n            breakLabel={'...'}\n            breakClassName={'break-me'}\n            pageCount={pageTotal}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={handlePageClick}\n            containerClassName={'pagination'}\n            subContainerClassName={'pages pagination'}\n            activeClassName={'active'} />\n        </Col>\n      </Row>\n      {\n        loading ? \n          <Row className='row-loading'>\n            <Loading isLoading={loading} />\n          </Row> \n        : <Row>\n            <Table striped bordered hover size=\"sm\">\n              <TableHeader />\n                <TableContent videos={videos}/>\n            </Table>\n          </Row>\n      }\n    </Container>\n  );\n}\n\nList.propTypes = {\n  loading: PropTypes.bool,\n  videos: PropTypes.object,\n  handlePageClick: PropTypes.func,\n  pageTotal: PropTypes.number,\n  pageSize: PropTypes.array,\n  pageSizeList: PropTypes.array,\n  onChangePageSize: PropTypes.func\n};\n\nexport default List;","import React, { useState, useEffect, useCallback } from 'react';\nimport Header from '../base/header';\nimport List from './list';\nimport Footer from '../base/footer';\nimport videoService from '../../services/videoService';\n\nconst PAGE_SIZE_LIST = [\n  {\n    label: '500',\n    value: '500',\n  },\n  {\n    label: '1000',\n    value: '1000'\n  },\n  {\n    label: '1500',\n    value: '1500'\n  }\n];\n\nconst Container = function() {\n  const [loading, setLoading] = useState(false);\n  const [videos, setVideos] = useState([]);\n  const [pageSize, setPageSize] = useState([PAGE_SIZE_LIST[0]]);\n  const [pageTotal, setPageTotal] = useState(10);\n\n  const queryData = useCallback(async function (pSize, pIndex) {\n    try\n    {\n      setLoading(true);\n\n      let resVideo = await videoService.getList(pSize, pIndex);\n      let { page_total, page_data } = resVideo;\n      setPageTotal(page_total);\n      setVideos(page_data);\n\n      setLoading(false);\n    }\n    catch (err) {\n      setLoading(false);\n      throw err;\n    }\n  }, []);\n  \n  useEffect(() => {\n    queryData(500, 0);\n  },[queryData]);\n\n  const handlePageClick = async function(selectedPage) {\n    try \n    {\n      let pSize = pageSize[0].value;\n      let pIndex = selectedPage.selected;\n      return queryData(pSize, pIndex);\n    }\n    catch (err) {\n      throw err;\n    }\n  }\n\n  const onChangePageSize = (selectedItem) => {\n    try\n    {\n      let pSize = selectedItem[0].value;\n      setPageSize(selectedItem);\n\n      let pIndex = 0;\n      return queryData(pSize, pIndex);\n    }\n    catch (err) {\n      throw err;\n    }\n  }\n\n  return (\n    <div className='wrap video-page'>\n      <Header />      \n      \n      <List loading={loading}\n            videos={videos} \n            handlePageClick={handlePageClick} \n            pageTotal={pageTotal}\n            pageSize={pageSize}\n            pageSizeList={PAGE_SIZE_LIST}\n            onChangePageSize={onChangePageSize} />\n      \n      <Footer />\n    </div>\n  );\n}\n\nexport default Container;","import Container from './container';\nexport default Container;","import Container from './container';\nexport default Container;","import React from 'react';\nimport PropTypes from 'prop-types'; \nimport { Container, Form } from 'react-bootstrap';\n\nconst FormEdit = function({ video }) {    \n    return (\n        <Container className='form-full-screen'>\n            <Form>\n                <Form.Group controlId=\"txtVideoName\">\n                    <Form.Label>Video Name:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter video name\" value={video.VideoName} />\n                </Form.Group>\n                <Form.Group controlId=\"txtVideoNameEn\">\n                    <Form.Label>Video Name (English):</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter video name (en)\" value={video.VideoName_EN} />\n                </Form.Group>\n                <Form.Group controlId=\"txtDescription\">\n                    <Form.Label>Short Description:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter short description\" value={video.Description} />\n                </Form.Group>\n                <Form.Group controlId=\"txtDescription\">\n                    <Form.Label>Short Description:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter short description (en)\" value={video.Description_EN} />\n                </Form.Group>\n            </Form>\n        </Container>\n    );\n}\n\nFormEdit.propTypes = {\n    video: PropTypes.object\n};\n\nexport default FormEdit;","import Container from './container';\nexport default Container;","import React, { useState, useCallback, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from '../base/header';\nimport Footer from '../base/footer';\nimport FormEdit from './form';\nimport videoService from '../../services/videoService';\n\nconst EditContainer = function() {\n  const { id: video_key } = useParams();\n  const [video, setVideo] = useState(null);\n\n  const queryData = useCallback(async function () {\n    try\n    {\n      let videoInfo = await videoService.getVideoByKey(video_key);\n      setVideo(videoInfo);\n    }\n    catch (err) {\n      throw err;\n    }\n  }, [video_key]);\n    \n  useEffect(() => {\n    queryData();\n  },[queryData]);  \n\n  return (\n    <div className='wrap video-page'>\n      <Header />\n      {\n        video && <FormEdit video={video} />\n      }\n      <Footer />\n    </div>\n  );\n}\n\nexport default EditContainer;","import Container from './container';\nexport default Container;","import React from 'react';\nimport PropTypes from 'prop-types'; \nimport ReactPlayer from 'react-player';\n\nconst Container = function({ url = '' }) {\n  return (\n    <ReactPlayer url={url} playing={true} muted={true} />\n  );\n}\n\nContainer.propTypes = {\n  url: PropTypes.string\n};\n\nexport default Container;","import Container from './container';\nexport default Container;","import React from 'react';\nimport PropTypes from 'prop-types'; \nimport { Container } from 'react-bootstrap';\nimport Media from '../../base/media';\n\nconst Display = function({ title, text, files = [] }) {\n    return (\n        <Container className='form-full-screen'>\n        { title && files.length && <Media url={files[0].VideoFileUrl} /> }\n        </Container>\n    );\n}\n\nDisplay.propTypes = {\n    title: PropTypes.string,\n    text: PropTypes.string,\n    files: PropTypes.array\n};\n\nexport default Display;","import Container from './container';\nexport default Container;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from '../base/header';\nimport Display from './display';\nimport Footer from '../base/footer';\nimport videoService from '../../services/videoService';\n\nconst Container = function() {  \n  const { id: video_key } = useParams();  \n  const [video, setVideo] = useState(null);\n\n  const queryData = useCallback(async function () {\n    try {      \n      let vid = await videoService.getVideoByKey(video_key);\n      setVideo(vid);\n    } catch (err) {\n      throw err;\n    }\n  }, [video_key]);\n  \n  useEffect(() => {\n    queryData();\n  },[queryData]);  \n\n  return (\n    <div className='wrap player-page'>\n      <Header />      \n      {\n        video ? <Display title={video.VideoName} text={video.Description} files={video.Files} /> : null\n      }\n      <Footer />\n    </div>\n  );\n}\n\nexport default Container;","import React from 'react';\nimport Header from '../base/header';\nimport Footer from '../base/footer';\nimport Webcam from 'react-webcam';\n\nconst Content = () => {\n  return (\n    <div style={{alignItems: 'center', marginLeft: '20px'}}>\n      <Webcam />\n    </div>\n  )\n}\n\nconst Container = function() {\n\n  return (\n    <div className='wrap video-page'>\n      <Header />\n\n      <Content />\n      \n      <Footer />\n    </div>\n  );\n}\n\nexport default Container;","import Container from './container';\nexport default Container;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Home from './components/home';\nimport Employee from './components/employee';\nimport EmployeeEdit from './components/employeeEdit';\nimport Course from './components/course';\nimport CourseEdit from './components/courseEdit';\nimport Video from './components/video';\nimport VideoEdit from './components/videoEdit';\nimport Player from './components/player';\nimport Camera from './components/camera';\n\nconst RouteConfig = function() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    {/* <Home /> */}\n                    <Camera />\n                </Route>\n                <Route exact path=\"/employee\">\n                    <Employee />\n                </Route>\n                <Route exact path=\"/employee/:id\">\n                    <EmployeeEdit />\n                </Route>\n                <Route exact path=\"/course\">\n                    <Course />\n                </Route>\n                <Route exact path=\"/course/:id\">\n                    <CourseEdit />\n                </Route>\n                <Route exact path=\"/video\">\n                    <Video />\n                </Route>\n                <Route exact path=\"/video/:id\">\n                    <VideoEdit />\n                </Route>\n                <Route exact path=\"/player/:id\">\n                    <Player />\n                </Route>\n                <Route exact path=\"/camera\">\n                    <Camera />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default RouteConfig;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const PAGE_SIZE_LIST = [\n  {\n    label: '50',\n    value: '50',\n  },\n  {\n    label: '100',\n    value: '100',\n  },\n  {\n    label: '500',\n    value: '500',\n  },\n  {\n    label: '1000',\n    value: '1000'\n  },\n  {\n    label: '1500',\n    value: '1500'\n  }\n];\n\nexport const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT'; \n\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\n\nexport const GET_VIDEO_PENDING = 'GET_VIDEO_PENDING';\nexport const GET_VIDEO_COMPLETED = 'GET_VIDEO_COMPLETED';\nexport const GET_VIDEO_FAILED = 'GET_VIDEO_FAILED';    ","import {    \n    INCREMENT, DECREMENT,\n    START_LOADING, STOP_LOADING,\n    GET_VIDEO_PENDING, GET_VIDEO_COMPLETED, GET_VIDEO_FAILED\n} from '../common';\n\nexport const INITIAL_STATE = {\n    count: 0,\n    isLoading: false,    \n    videoList: [],    \n    videoDetail: {}\n};\n\nconst videoReducer = function(state = INITIAL_STATE, { type, payload }) {\n    switch (type) {\n    case START_LOADING:\n        return {\n            ...state,\n            isLoading: true\n        }\n    case STOP_LOADING:\n        return {\n            ...state,\n            isLoading: false\n        }    \n    case GET_VIDEO_PENDING:\n        return {\n            ...state, \n            videoList: []\n        };\n    case GET_VIDEO_COMPLETED:\n        return {\n            ...state,\n            videoList: payload.videoList\n        };\n    case GET_VIDEO_FAILED:\n        return {\n            ...state,\n            videoList: payload.err.message\n        }       \n    case INCREMENT:\n        return {\n            ...state,\n            count: state.count + 1\n        }\n    case DECREMENT:\n        return {\n            ...state,\n            count: state.count - 1\n        }\n    default:\n        return state;\n    }\n}\n\nexport default videoReducer;","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\nimport { reducer as formReducer } from 'redux-form';\nimport videoReducer from './videoReducer';\n\nconst rootReducer = combineReducers({   \n    routing: routerReducer,\n    form: formReducer,    \n    video: videoReducer\n});\n\nexport default rootReducer;","import configureStore from './configure';\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles/index.scss';\nimport Routes from './routes';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport configureStore from './store';\nconst store = new configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Routes />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nexport default function configure(initialState) {\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk)\n  );\n}"],"sourceRoot":""}